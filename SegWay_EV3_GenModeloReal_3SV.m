% -------------------------------------------------------------------------
%                 Identificación Modelo Pendulo Simple
% -------------------------------------------------------------------------
clear all;
close all;
clc;
data=load('EV3_SegWay_Data_28072017.txt');
% -------------------------------------------------------------------------
%    Ajuste de los vectores entrada y salida tomados del modelo simulado
% -------------------------------------------------------------------------
XY=[];
U=[];
n=60;
D=n/2;
U=data(:,6);
x=[data(:,5) data(:,3) data(:,2) data(:,4)]';
% -------------------------------------------------------------------------
% Acotamiento en el tiempo de los datos de entrada
% -------------------------------------------------------------------------
time=data(:,1)/1000;
U=U(time(:,1)>60&time(:,1)<70,1);
x=x(:,time(:,1)>60&time(:,1)<70);
time=time(time(:,1)>60&time(:,1)<70,1);
% -------------------------------------------------------------------------
thetap=x(4,:)';
alphap=x(3,:)';

thetapp=diff(thetap)./diff(time);
alphapp=diff(alphap)./diff(time);

for i=1:size(thetapp,1)-n
    thetapp_filt(i,1)=0;
    for j=0:n-1
        thetapp_filt(i,1)=thetapp_filt(i,1)+thetapp(i+j,1); 
    end
    thetapp_filt(i,1)=thetapp_filt(i,1)/n;
end
for i=1:size(alphapp,1)-n
    alphapp_filt(i,1)=0;
    for j=0:n-1
        alphapp_filt(i,1)=alphapp_filt(i,1)+alphapp(i+j,1); 
    end
    alphapp_filt(i,1)=alphapp_filt(i,1)/n;
end
% Y=[QT(:,6) QT(:,7)];
Y=[thetapp_filt alphapp_filt];

U=U(D+1:end-D-1,:);
x=x(:,D+1:end-D-1);
time=time(D+1:end-D-1,1);
% D+1:end-D
% U=U(1:end-n-1,:);
% x=x(:,1:end-n-1);

figure
subplot(4,2,2)
plot(time,x(1,:),'b')
grid on;
title('Posición de las Ruedas');
% figure
subplot(4,2,4)
plot(time,x(4,:),'g')
grid on;
title('Velocidad de las Ruedas');
% figure
subplot(4,2,1)
plot(time,x(2,:),'b')
grid on;
title('Posicion del Polo');
% figure
subplot(4,2,3)
plot(time,x(3,:),'g')
grid on;
title('Velocidad del Polo');
% figure
subplot(4,2,6)
plot(time,Y(:,1),'m')
grid on;
title('Aceleración de las Ruedas');
% figure
subplot(4,2,5)
plot(time,Y(:,2),'y')
grid on;
title('Aceleración del Polo');
% figure
subplot(4,2,7:8)
plot(time,U,'r')
grid on;
title('Acción de control');
% -------------------------------------------------------------------------
%    Generación de vector X y P del modelo difuso Takani-Sugeno
% -------------------------------------------------------------------------
x=x(2:4,:);
rangs=[min(x(1,:)) max(x(1,:));min(x(2,:)) max(x(2,:));...
    min(x(3,:)) max(x(3,:))];
nc=3;
TestFuzzyfier(rangs,nc);
Beta=FuzzyWeight3u(x,rangs,nc);
xtemp=[ones(size(x,2),1) x' U];
for i=1:size(Beta,1)
    for j=1:size(Beta,2)
        for k=1:size(xtemp,2)
            X(i,(j-1)*size(xtemp,2)+k)=Beta(i,j)*xtemp(i,k);
        end
    end
end
gama=0.01;
Xa=[X;gama*eye(size(X,2))];
Ya=[Y;ones(size(X,2),2)];
P=inv(Xa'*Xa)*Xa'*Ya;
save('FuzzyModelSegWay_EV3_3SV','P','X')
% -------------------------------------------------------------------------
% Comparación modelo identificado con datos de salida del modelo simulado
% -------------------------------------------------------------------------
% -------------------------------------------------------------------------
% Comparación modelo identificado con datos de salida del modelo simulado
% -------------------------------------------------------------------------
y=X*P;
%Calculo de media para señales de aceleración
errorThetaPP=mse(Y(:,1)-y(:,1));
errorAlphaPP=mse(Y(:,2)-y(:,2));
f1=figure
fs=15;
plot(time,y(:,1),'b--','LineWidth',2)
hold on
plot(time,Y(:,1),'g-','LineWidth',1)
grid on
title({'Accelerated Comparison Theta identified model with',...
    'Acceleration generated by the reference model',...
    strcat('Error between curves in MSE sense =',num2str(sqrt(errorThetaPP)))},'FontSize',fs)
xlabel('Samples','FontSize',fs)
ylabel('grades/s^2','FontSize',fs)
legend('ThetaPP Identified model','ThetaPP Reference Model')
set(gca,'FontSize',fs)
% axis([5.2 10 -1100 1100])
f2=figure
plot(time,y(:,2),'b--','LineWidth',2)
hold on
plot(time,Y(:,2),'g-','LineWidth',1)
grid on
title({'Accelerated Comparison Alpha identified model with',...
    'Acceleration generated by the reference model',...
    strcat('Error between curves in MSE sense =',num2str(sqrt(errorAlphaPP)))},'FontSize',fs)
xlabel('Samples','FontSize',fs)
ylabel('grades/s^2','FontSize',fs)
legend('AlphaPP Identified model','AlphaPP Reference Model')
set(gca,'FontSize',fs)
% axis([5.2 10 -800 800])
% legend(plot_name,'FontSize',fs,'Location','NorthEast');
% axis([1999 2014 0 9e3])
height = 16;
width = 20;
%  set desired output size
set(f1, 'PaperUnits','centimeters')
set(f1, 'Units','centimeters')
% the last two parameters of 'Position' define the figure size
set(f1, 'Position',[0 0 width height],...
       'PaperSize',[width height],...
       'PaperPositionMode','auto',...
       'InvertHardcopy', 'off',...
       'Renderer','painters',...
       'Color',[1 1 1]...     %recommended if there are no alphamaps
);    
saveas(f1, 'SegWay_EV3_Ident_Thetapp', 'pdf')
set(f2, 'PaperUnits','centimeters')
set(f2, 'Units','centimeters')
% the last two parameters of 'Position' define the figure size
set(f2, 'Position',[0 0 width height],...
       'PaperSize',[width height],...
       'PaperPositionMode','auto',...
       'InvertHardcopy', 'off',...
       'Renderer','painters',...
       'Color',[1 1 1]...     %recommended if there are no alphamaps
);    
saveas(f2, 'SegWay_EV3_Ident_Aplhapp', 'pdf')
% -------------------------------------------------------------------------
%            Diseño de los controladores LQR para cada regla....???
% -------------------------------------------------------------------------
nr=nc^size(x,1);
ncoef=size(x,1)+2;
Q=[1 0 0;0 1 0;0 0 1];
R=1;
for i=1:nr
    A=[0 0 1;[P((i-1)*ncoef+2:(i-1)*ncoef+(ncoef-1),1)]';[P((i-1)*ncoef+2:(i-1)*ncoef+(ncoef-1),2)]'];
    B=[0 P(i*ncoef,1) P(i*ncoef,2)]';
    A0=[0 P(((i-1)*ncoef+1),1) P(((i-1)*ncoef+1),2)]';
%     invB=(0.5*(1./B'));
%     invB(invB==Inf)=0;
    k0=-B\A0;
    K((i-1)*(ncoef-1)+1:i*(ncoef-1),1)=[k0 lqr(A,B,Q,R)]';   
%     Co=ctrb(A,B);
%     % Number of uncontrollable states
%     i
%     unco=length(A)-rank(Co)
i
end
save('SegWay_EV3_Ctrl_3SV_LQR','K','rangs','nc')
% ucontrol=LQRfuzzyTS(K,rangs,nc,[0.1 0.5]');